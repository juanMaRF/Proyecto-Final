#include "ataque_enemy.h"
#include "mainwindow.h"
#include <QTimer>
#include <QGraphicsScene>
#include <QGraphicsItem>
#include <QDebug>
#include "enemi_dis.h"

extern MainWindow * game;

ataque_enemy::ataque_enemy(short nivel, short tipo,QGraphicsItem * parent): QObject(), QGraphicsPixmapItem()
{
    nivel1=nivel; //En que nivel llaman al ataque
    ataque=tipo; //Direccion del ataque

    setPixmap(QPixmap(":/Imagenes Proyecto final/6 Deceased/Ball.png").scaled(10,10)); //imagen de la bala

    QTimer * timer = new QTimer();

    connect(timer,SIGNAL(timeout()),this, SLOT(move()));

    timer->start(50);
}

void ataque_enemy::move()
{
    //Almacenanmos las colisiones en una QList
    QList<QGraphicsItem *> colliding_items = collidingItems();

    for(int i = 0, n = colliding_items.size(); i < n; i++){
        //Comprobamos si la colision es contra un obstaculo
        if(typeid(*(colliding_items[i])) == typeid(obstaculos)){
            if(this->isVisible()){
                //Borramos la bala
                scene()->removeItem(this);
                delete this;
                colliding_items.clear();
                break;
            }

        }
        //Comprobamos si la colision es contra en jugador
        if( typeid(*(colliding_items[i])) == typeid (player)){
            //Quitamos vida al jugador
            game->jugador->vida-=5;
            //Borramos la bala
            scene()->removeItem(this);
            delete this;
            colliding_items.clear();
            break;
        }
    }

    if(nivel1==0){
        //Guardamos la posicion inicial de la bala
        if(con==1){
            pos_inicial=pos().x();
            con=2;
        }

        if(ataque == 0){
            //Movimiento de la bala derecha a izquierda
            setPos(x()-10,y());
        }
        if(ataque == 1){
            //Movimiento de la bala de izquierda a derecha
            setPos(x()+10,y());
        }

        if(pos_inicial+400<=pos().x() or pos_inicial-400>=pos().x()){
            //Rango de ataque si lo iguala o sobrepasa se elimina la bala
            scene()->removeItem(this);
            delete this;
        }
    }
    
    //Nivel del primer boss
    if(nivel1==1){

        if(con==1){
            //guardamos la posicion inicial
            pos_inicial=pos().x();
            con=2;
        }

        //Movimientos de la bala
        if(ataque == 0){
            setPos(x()-30,y());
        }
        if(ataque == 1){
            setPos(x()+30,y());
        }
        if(ataque == 2){
            setPos(x(),y()-30);
        }

        //Rango de Ataque
        if(pos_inicial+800<=pos().x() or pos_inicial-800>=pos().x()){
            scene()->removeItem(this);
            delete this;
        }

    }

}
